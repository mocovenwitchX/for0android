diff --git a/gnupg/common/utf8conv.c b/gnupg/common/utf8conv.c
index 8616627..919af2b 100644
--- a/gnupg/common/utf8conv.c
+++ b/gnupg/common/utf8conv.c
@@ -38,7 +38,7 @@
 #include <langinfo.h>
 #endif
 #include <errno.h>
-#ifndef HAVE_W32_SYSTEM
+#if !defined HAVE_W32_SYSTEM && !defined __ANDROID__
 # include <iconv.h>
 #endif
 
@@ -56,9 +56,32 @@ static int no_translation;     /* Set to true if we let simply pass through. */
 static int use_iconv;          /* iconv comversion fucntions required. */
 
 
+#ifdef __ANDROID__
+/* fake stuff to get things building */
+#define ICONV_CONST
+typedef void *iconv_t;
+static iconv_t iconv_open (__const char *__tocode, __const char *__fromcode)
+{
+    return (iconv_t)(-1);
+}
+static size_t iconv (iconv_t __cd, char **__restrict __inbuf,
+		     size_t *__restrict __inbytesleft,
+		     char **__restrict __outbuf,
+		     size_t *__restrict __outbytesleft)
+{
+    return (size_t)(0);
+}
+static int iconv_close (iconv_t __cd)
+{
+    return 0;
+}
+static int load_libiconv (void)
+{
+    return -1;
+}
+#elif defined HAVE_W32_SYSTEM
 /* Under W32 we dlopen the iconv dll and don't require any iconv
    related headers at all.  However we need to define some stuff.  */
-#ifdef HAVE_W32_SYSTEM
 typedef void *iconv_t;
 #ifndef ICONV_CONST
 #define ICONV_CONST
@@ -170,7 +193,9 @@ set_native_charset (const char *newset)
 
   if (!newset)
     {
-#ifdef HAVE_W32_SYSTEM
+#ifdef __ANDROID__
+      newset = "utf-8";
+#elif defined HAVE_W32_SYSTEM
       static char codepage[30];
       unsigned int cpno;
       const char *aliases;
@@ -291,10 +316,10 @@ set_native_charset (const char *newset)
     {
       iconv_t cd;
 
-#ifdef HAVE_W32_SYSTEM
+#if defined HAVE_W32_SYSTEM || defined __ANDROID__
       if (load_libiconv ())
         return -1;
-#endif /*HAVE_W32_SYSTEM*/
+#endif /*HAVE_W32_SYSTEM || __ANDROID__*/
 
       cd = iconv_open (full_newset, "utf-8");
       if (cd == (iconv_t)-1)
@@ -717,10 +742,10 @@ utf8_to_native (const char *string, size_t length, int delim)
 jnlib_iconv_t
 jnlib_iconv_open (const char *tocode, const char *fromcode)
 {
-#ifdef HAVE_W32_SYSTEM
+#if defined HAVE_W32_SYSTEM || defined __ANDROID__
   if (load_libiconv ())
     return (jnlib_iconv_t)(-1);
-#endif /*HAVE_W32_SYSTEM*/
+#endif /*HAVE_W32_SYSTEM || __ANDROID__*/
 
   return (jnlib_iconv_t)iconv_open (tocode, fromcode);
 }
@@ -734,10 +759,10 @@ jnlib_iconv (jnlib_iconv_t cd,
              char **outbuf, size_t *outbytesleft)
 {
 
-#ifdef HAVE_W32_SYSTEM
+#if defined HAVE_W32_SYSTEM || defined __ANDROID__
   if (load_libiconv ())
     return 0;
-#endif /*HAVE_W32_SYSTEM*/
+#endif /*HAVE_W32_SYSTEM || __ANDROID__*/
 
   return iconv ((iconv_t)cd, (char**)inbuf, inbytesleft, outbuf, outbytesleft);
 }
@@ -747,10 +772,10 @@ jnlib_iconv (jnlib_iconv_t cd,
 int
 jnlib_iconv_close (jnlib_iconv_t cd)
 {
-#ifdef HAVE_W32_SYSTEM
+#if defined HAVE_W32_SYSTEM || defined __ANDROID__
   if (load_libiconv ())
     return 0;
-#endif /*HAVE_W32_SYSTEM*/
+#endif /*HAVE_W32_SYSTEM || __ANDROID__*/
 
   return iconv_close ((iconv_t)cd);
 }
@@ -826,4 +851,4 @@ utf8_to_wchar (const char *string)
     }
   return result;
 }
-#endif /*HAVE_W32_SYSTEM*/
+#endif /*HAVE_W32_SYSTEM || __ANDROID__*/
diff --git a/gnupg/Makefile.am b/gnupg/Makefile.am
index 49ec3fc..bd4bb22 100644
--- a/gnupg/Makefile.am
+++ b/gnupg/Makefile.am
@@ -80,10 +80,10 @@ else
 doc =
 endif
 
-if HAVE_W32_SYSTEM
-tests =
-else
+if RUN_TESTS
 tests = tests
+else
+tests = 
 endif
 
 SUBDIRS = m4 gl include common ${kbx} \
diff --git a/gnupg/configure.ac b/gnupg/configure.ac
index 9dd555e..ca71f8f 100644
--- a/gnupg/configure.ac
+++ b/gnupg/configure.ac
@@ -576,6 +576,8 @@ try_gettext=yes
 have_dosish_system=no
 have_w32_system=no
 have_w32ce_system=no
+have_android_system=no
+run_tests=yes
 use_simple_gettext=no
 use_ldapwrapper=yes
 mmap_needed=yes
@@ -592,6 +594,7 @@ case "${host}" in
         disable_keyserver_path=yes
         have_dosish_system=yes
         have_w32_system=yes
+        run_tests=no
         use_ldapwrapper=no  # Fixme: Do this only for CE.
         case "${host}" in
           *-mingw32ce*)
@@ -651,6 +654,10 @@ case "${host}" in
         ;;
     m68k-atari-mint)
         ;;
+    *-linux-androideabi)
+        have_android_system=yes
+        run_tests=no
+        ;;
     *)
        ;;
 esac
@@ -675,6 +682,16 @@ fi
 AM_CONDITIONAL(HAVE_W32_SYSTEM, test "$have_w32_system" = yes)
 AM_CONDITIONAL(HAVE_W32CE_SYSTEM, test "$have_w32ce_system" = yes)
 
+if test "$have_android_system" = yes; then
+   AC_DEFINE(HAVE_ANDROID_SYSTEM,1, [Defined if we build for an Android system])
+fi
+AM_CONDITIONAL(HAVE_ANDROID_SYSTEM, test "$have_android_system" = yes)
+
+if test "$run_tests" = yes; then
+   AC_DEFINE(RUN_TESTS,1, [Defined if we should run the tests])
+fi
+AM_CONDITIONAL(RUN_TESTS, test "$run_tests" = yes)
+
 if test "$use_ldapwrapper" = yes; then
    AC_DEFINE(USE_LDAPWRAPPER,1, [Build dirmngr with LDAP wrapper process])
 fi
